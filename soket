using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

using System.Net.Sockets;
using System.Net;
using System.Threading;

namespace socket
{
    /// <summary>
    /// MainWindow.xaml 的交互逻辑
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }
        Socket ServerSocket = null;

        private void btnStart_Click(object sender, RoutedEventArgs e)
        {
            IPEndPoint IPE = new IPEndPoint(IPAddress.Parse(tboxIP.Text), Int32.Parse(tboxPort.Text));
            ServerSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            ServerSocket.Bind(IPE);
            ServerSocket.Listen(10);
            showmsg("服务器已启动，监听中...");

            Thread thread = new Thread(ListenClientConnect);
            thread.IsBackground=true;
            thread.Start();

        }
        Dictionary<string, Socket> dic = new Dictionary<string, Socket>();
        private void ListenClientConnect(object obj)
        {
            while (true)
            {
                Socket socketClient = ServerSocket.Accept() ;
                string RemoteIP = socketClient.RemoteEndPoint.ToString();
                dic.Add(RemoteIP, socketClient);
                Dispatcher.Invoke(()=>lstboxIP.Items.Add(RemoteIP));
                showmsg(RemoteIP + "已连接");

                Thread recieveThread = new Thread(recievemsg);
                recieveThread.IsBackground = true;
                recieveThread.Start(socketClient);
            }
        }

        private void recievemsg(object soc)
        {
            Socket socketClient = (Socket)soc;
            while (true)
            {
                byte[] buffer = new byte[1024];
                int n = socketClient.Receive(buffer);
                //string msg = Encoding.Default.GetString(buffer, 0, n);
                string msg = Encoding.UTF8.GetString(buffer, 0, n);
                //可在这里指定接受数据格式

                showmsg(socketClient.RemoteEndPoint.ToString()+":"+msg);
            }
        }

        private void showmsg(string p)
        {
            Dispatcher.BeginInvoke(new Action(() =>
                {
                    rtbx.AppendText(p + "\r\n");
                }));
        }

        private void btnStop_Click(object sender, RoutedEventArgs e)
        {
            ServerSocket.Close();
        }

        private void btnSend_Click(object sender, RoutedEventArgs e)
        {
            showmsg(tboxMsg.Text);
            string ip = lstboxIP.SelectedValue.ToString();
            //byte[] by = Encoding.UTF8.GetBytes(tboxMsg.Text);
            byte[] by = Encoding.Default.GetBytes(tboxMsg.Text);
            dic[ip].Send(by,0);
            tboxMsg.Text = "";
        }
    }
}
